{"version":3,"sources":["utils.js","Follower.js","App.js","useFetch.js","index.js"],"names":["paginate","followers","pages","Math","ceil","length","Array","from","_","index","start","slice","Follower","avatar_url","login","html_url","className","src","alt","href","App","useState","loading","setLoading","data","setData","getProducts","a","fetch","response","json","useEffect","useFetch","page","setPage","setFollowers","map","follower","key","id","onClick","prev","handlePage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAYeA,EAZE,SAACC,GACd,IACMC,EAAQC,KAAKC,KAAKH,EAAUI,OADb,GAQrB,OALqBC,MAAMC,KAAK,CAAEF,OAAQH,IAAS,SAACM,EAAGC,GACnD,IAAMC,EAJW,EAIHD,EACd,OAAOR,EAAUU,MAAMD,EAAOA,EALb,OCaVE,EAZE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnC,OACI,6BAASC,UAAU,QACf,yBAAKC,IAAKJ,EAAYK,IAAKJ,IAC3B,4BAAKA,GACL,uBAAGK,KAAMJ,EAAUC,UAAU,OAA7B,kBC2DGI,MA/Df,WAAgB,IAAD,ECCS,WAAO,IAAD,EACIC,oBAAS,GADb,mBACnBC,EADmB,KACVC,EADU,OAEFF,mBAAS,IAFP,mBAEnBG,EAFmB,KAEbC,EAFa,KAIpBC,EAAW,uCAAG,8BAAAC,EAAA,sEACOC,MAPnB,mEAMY,cACVC,EADU,gBAEGA,EAASC,OAFZ,QAEVN,EAFU,QAIPnB,OAAS,IACdoB,EAAQzB,EAASwB,IACjBD,GAAW,IANC,2CAAH,qDAajB,OAHAQ,qBAAU,WACNL,MACD,IACI,CAAEJ,UAASE,QDjBQQ,GAAlBV,EADG,EACHA,QAASE,EADN,EACMA,KADN,EAEaH,mBAAS,GAFtB,mBAEJY,EAFI,KAEEC,EAFF,OAGuBb,mBAAS,IAHhC,mBAGJpB,EAHI,KAGOkC,EAHP,KAsBX,OAjBAJ,qBAAU,WACFT,GACJa,EAAaX,EAAKS,MACnB,CAACX,EAASW,IAeT,8BACI,yBAAKjB,UAAU,iBACX,4BAAKM,EAAU,aAAe,cAC9B,yBAAKN,UAAU,eAEnB,6BAASA,UAAU,aACf,yBAAKA,UAAU,aACVf,EAAUmC,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,eAAUC,IAAKD,EAASE,IAAQF,SAGtCf,GACE,yBAAKN,UAAU,iBACX,4BAAQA,UAAU,WAAWwB,QAtBhC,WACA,IAATP,GACJC,GAAQ,SAACO,GAAD,OAAUA,EAAO,OAoBT,QAGCjB,EAAKY,KAAI,SAAC5B,EAAGC,GAAJ,OACN,4BACI6B,IAAK7B,EACLO,UAAS,mBACLP,IAAUwB,EAAO,aAAe,MAEpCO,QAAS,YAnClB,SAAC/B,GAChByB,EAAQzB,GAmCoBiC,CAAWjC,KAGd,IACAA,EAAQ,MAGjB,4BAAQO,UAAU,WAAWwB,QAnChC,WACTP,IAAST,EAAKnB,OAAS,GAC3B6B,GAAQ,SAACO,GAAD,OAAUA,EAAO,OAiCT,YEnDxBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.22b8d696.chunk.js","sourcesContent":["const paginate = (followers) => {\n    const itemsPerPage = 9;\n    const pages = Math.ceil(followers.length / itemsPerPage);\n\n    const newFollowers = Array.from({ length: pages }, (_, index) => {\n        const start = index * itemsPerPage;\n        return followers.slice(start, start + itemsPerPage);\n    });\n\n    return newFollowers;\n};\n\nexport default paginate;\n","import React from \"react\";\n\nconst Follower = ({ avatar_url, login, html_url }) => {\n    return (\n        <article className=\"card\">\n            <img src={avatar_url} alt={login} />\n            <h4>{login}</h4>\n            <a href={html_url} className=\"btn\">\n                view profile\n            </a>\n        </article>\n    );\n};\n\nexport default Follower;\n","import React, { useState, useEffect } from \"react\";\nimport { useFetch } from \"./useFetch\";\nimport Follower from \"./Follower\";\nfunction App() {\n    const { loading, data } = useFetch();\n    const [page, setPage] = useState(0);\n    const [followers, setFollowers] = useState([]);\n\n    useEffect(() => {\n        if (loading) return;\n        setFollowers(data[page]);\n    }, [loading, page]);\n\n    const handlePage = (index) => {\n        setPage(index);\n    };\n\n    const prevPage = () => {\n        if (page === 0) return;\n        setPage((prev) => prev - 1);\n    };\n    const nextPage = () => {\n        if (page === data.length - 1) return;\n        setPage((prev) => prev + 1);\n    };\n    return (\n        <main>\n            <div className=\"section-title\">\n                <h1>{loading ? \"loading...\" : \"pagination\"}</h1>\n                <div className=\"underline\"></div>\n            </div>\n            <section className=\"followers\">\n                <div className=\"container\">\n                    {followers.map((follower) => (\n                        <Follower key={follower.id} {...follower} />\n                    ))}\n                </div>\n                {!loading && (\n                    <div className=\"btn-container\">\n                        <button className=\"prev-btn\" onClick={prevPage}>\n                            prev\n                        </button>\n                        {data.map((_, index) => (\n                            <button\n                                key={index}\n                                className={`page-btn ${\n                                    index === page ? \"active-btn\" : null\n                                }`}\n                                onClick={() => {\n                                    handlePage(index);\n                                }}\n                            >\n                                {\" \"}\n                                {index + 1}\n                            </button>\n                        ))}\n                        <button className=\"next-btn\" onClick={nextPage}>\n                            next\n                        </button>\n                    </div>\n                )}\n            </section>\n        </main>\n    );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport paginate from \"./utils\";\nconst url = \"https://api.github.com/users/john-smilga/followers?per_page=100\";\n\nexport const useFetch = () => {\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n\n    const getProducts = async () => {\n        const response = await fetch(url);\n        const data = await response.json();\n\n        if (data.length > 0) {\n            setData(paginate(data));\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        getProducts();\n    }, []);\n    return { loading, data };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}